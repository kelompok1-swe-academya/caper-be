// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/uuid/uuid.go
//
// Generated by this command:
//
//	mockgen -source=pkg/uuid/uuid.go -destination=pkg/uuid/mock/uuid_mock.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockUUIDInterface is a mock of UUIDInterface interface.
type MockUUIDInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUUIDInterfaceMockRecorder
	isgomock struct{}
}

// MockUUIDInterfaceMockRecorder is the mock recorder for MockUUIDInterface.
type MockUUIDInterfaceMockRecorder struct {
	mock *MockUUIDInterface
}

// NewMockUUIDInterface creates a new mock instance.
func NewMockUUIDInterface(ctrl *gomock.Controller) *MockUUIDInterface {
	mock := &MockUUIDInterface{ctrl: ctrl}
	mock.recorder = &MockUUIDInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUUIDInterface) EXPECT() *MockUUIDInterfaceMockRecorder {
	return m.recorder
}

// NewV7 mocks base method.
func (m *MockUUIDInterface) NewV7() (uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewV7")
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewV7 indicates an expected call of NewV7.
func (mr *MockUUIDInterfaceMockRecorder) NewV7() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewV7", reflect.TypeOf((*MockUUIDInterface)(nil).NewV7))
}
